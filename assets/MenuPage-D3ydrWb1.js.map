{"version":3,"file":"MenuPage-D3ydrWb1.js","sources":["../../src/components/MenuList.jsx","../../src/pages/MenuPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Modal, Input, Select, message, Switch } from \"antd\";\r\nimport { ShoppingCartOutlined, DollarOutlined } from \"@ant-design/icons\";\r\n\r\nconst MenuList = () => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [filterCategory, setFilterCategory] = useState(\"all\");\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [orderData, setOrderData] = useState([]);\r\n  const [orderLoading, setOrderLoading] = useState(false);\r\n  const [editingItem, setEditingItem] = useState(null);\r\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\r\n\r\n  // Currency state\r\n  const [currency, setCurrency] = useState(\"USD\"); // Default to USD\r\n  const [exchangeRate, setExchangeRate] = useState(56.5); // Default PHP to USD rate (1 USD = 56.5 PHP)\r\n\r\n  // Consolidated Cart State\r\n  const [cart, setCart] = useState([]);\r\n  const [isCartModalVisible, setIsCartModalVisible] = useState(false);\r\n\r\n  // Cart Modal State for Order Details\r\n  const [customerDetails, setCustomerDetails] = useState({\r\n    customer_id: \"\",\r\n    customer_name: \"\",\r\n    order_date: new Date().toISOString().split(\"T\")[0],\r\n    total_amount: 0,\r\n    status: \"pending\",\r\n    currency: \"USD\", // Default currency\r\n  });\r\n\r\n  const [newItem, setNewItem] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    category: \"FOOD\",\r\n    is_available: true,\r\n    currency: \"USD\", // Default currency for new items\r\n  });\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n\r\n  // Define category options based on your backend model\r\n  const categoryOptions = [\r\n    { value: \"FOOD\", label: \"Food\" },\r\n    { value: \"DRINKS\", label: \"Drinks\" },\r\n    { value: \"DESSERT\", label: \"Dessert\" },\r\n  ];\r\n\r\n  // Backend API URL\r\n  const API_BASE_URL = \"https://tomlin-backend.onrender.com/api/menu/\";\r\n  const ORDERS_API_URL = \"https://tomlin-backend.onrender.com/api/orders/\";\r\n\r\n  useEffect(() => {\r\n    fetchMenuItems();\r\n    fetchOrders();\r\n    fetchExchangeRate();\r\n  }, []);\r\n\r\n  const fetchExchangeRate = async () => {\r\n    try {\r\n      // In a production app, you would fetch the exchange rate from an API\r\n      // For this example, we'll use a hardcoded value\r\n      // Example API call would be:\r\n      // const response = await axios.get('https://api.exchangerate-api.com/v4/latest/USD');\r\n      // setExchangeRate(response.data.rates.PHP);\r\n\r\n      // Using fixed exchange rate for demonstration\r\n      setExchangeRate(56.5); // 1 USD = 56.5 PHP\r\n    } catch (err) {\r\n      console.error(\"Error fetching exchange rate:\", err);\r\n    }\r\n  };\r\n\r\n  const fetchMenuItems = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(API_BASE_URL);\r\n      setMenuItems(response.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch menu items\");\r\n      setLoading(false);\r\n      console.error(\"Error fetching menu items:\", err);\r\n    }\r\n  };\r\n\r\n  const fetchOrders = async () => {\r\n    try {\r\n      const response = await axios.get(ORDERS_API_URL);\r\n      setOrderData(response.data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching orders:\", err);\r\n      // Don't set error state here to avoid affecting the main UI\r\n    }\r\n  };\r\n\r\n  // Convert price between currencies\r\n  const convertPrice = (price, fromCurrency, toCurrency) => {\r\n    if (fromCurrency === toCurrency) return parseFloat(price);\r\n\r\n    if (fromCurrency === \"USD\" && toCurrency === \"PHP\") {\r\n      return parseFloat(price) * exchangeRate;\r\n    } else if (fromCurrency === \"PHP\" && toCurrency === \"USD\") {\r\n      return parseFloat(price) / exchangeRate;\r\n    }\r\n\r\n    return parseFloat(price);\r\n  };\r\n\r\n  const formatCurrency = (amount, currencyCode = currency) => {\r\n    const currencyConfig = {\r\n      USD: { currency: \"USD\", locale: \"en-US\" },\r\n      PHP: { currency: \"PHP\", locale: \"en-PH\" },\r\n    };\r\n\r\n    const config = currencyConfig[currencyCode];\r\n\r\n    return new Intl.NumberFormat(config.locale, {\r\n      style: \"currency\",\r\n      currency: config.currency,\r\n    }).format(amount);\r\n  };\r\n\r\n  // Toggle currency\r\n  const toggleCurrency = () => {\r\n    setCurrency((prev) => (prev === \"USD\" ? \"PHP\" : \"USD\"));\r\n    // Update customer details currency\r\n    setCustomerDetails((prev) => ({\r\n      ...prev,\r\n      currency: prev.currency === \"USD\" ? \"PHP\" : \"USD\",\r\n    }));\r\n  };\r\n\r\n  const addToCart = (item) => {\r\n    const existingItem = cart.find((cartItem) => cartItem.id === item.id);\r\n\r\n    // Store the original currency and price for accurate calculations\r\n    const itemWithCurrency = {\r\n      ...item,\r\n      original_currency: item.currency || \"USD\", // Default to USD if not specified\r\n      original_price: item.price,\r\n    };\r\n\r\n    if (existingItem) {\r\n      setCart(\r\n        cart.map((cartItem) =>\r\n          cartItem.id === item.id\r\n            ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n            : cartItem\r\n        )\r\n      );\r\n    } else {\r\n      setCart([...cart, { ...itemWithCurrency, quantity: 1 }]);\r\n    }\r\n  };\r\n\r\n  const updateQuantity = (itemId, newQuantity) => {\r\n    if (newQuantity < 1) {\r\n      removeFromCart(itemId);\r\n    } else {\r\n      setCart(\r\n        cart.map((item) =>\r\n          item.id === itemId ? { ...item, quantity: newQuantity } : item\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (itemId) => {\r\n    setCart(cart.filter((item) => item.id !== itemId));\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    return cart.reduce((total, item) => {\r\n      // Convert the item price from its original currency to the currently selected currency\r\n      const priceInCurrentCurrency = convertPrice(\r\n        item.original_price,\r\n        item.original_currency || \"USD\",\r\n        currency\r\n      );\r\n      return total + priceInCurrentCurrency * item.quantity;\r\n    }, 0);\r\n  };\r\n\r\n  const handleCustomerDetailsChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCustomerDetails((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n      total_amount: calculateTotal(),\r\n    }));\r\n  };\r\n\r\n  const validateOrderData = () => {\r\n    if (!customerDetails.customer_id) {\r\n      message.error(\"Please provide a customer ID\");\r\n      return false;\r\n    }\r\n    if (!customerDetails.customer_name) {\r\n      message.error(\"Please provide a customer name\");\r\n      return false;\r\n    }\r\n    if (cart.length === 0) {\r\n      message.error(\"Your cart is empty\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const placeOrder = async () => {\r\n    // Validate customer details\r\n    if (!validateOrderData()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setOrderLoading(true);\r\n      const orderData = {\r\n        customer_id: customerDetails.customer_id,\r\n        customer_name: customerDetails.customer_name,\r\n        date: customerDetails.order_date,\r\n        status: customerDetails.status,\r\n        currency: currency, // Add the selected currency\r\n        total_amount: calculateTotal(), // Send the total in the current currency\r\n        order_items: cart.map((item) => ({\r\n          menu_item: item.id,\r\n          quantity: item.quantity,\r\n          unit_price: convertPrice(\r\n            item.original_price,\r\n            item.original_currency || \"USD\",\r\n            currency\r\n          ),\r\n          item_currency: currency,\r\n        })),\r\n      };\r\n\r\n      console.log(\"Sending order data:\", JSON.stringify(orderData, null, 2));\r\n\r\n      await axios.post(\r\n        \"https://tomlin-backend.onrender.com/api/orders/\",\r\n        orderData\r\n      );\r\n\r\n      // Reset cart and customer details after successful order\r\n      setCart([]);\r\n      setIsCartModalVisible(false);\r\n      setCustomerDetails({\r\n        customer_id: \"\",\r\n        customer_name: \"\",\r\n        order_date: new Date().toISOString().split(\"T\")[0],\r\n        total_amount: 0,\r\n        status: \"pending\",\r\n        currency: currency,\r\n      });\r\n\r\n      message.success(\"Order placed successfully!\");\r\n      fetchOrders(); // Refresh orders list\r\n    } catch (err) {\r\n      console.error(\"Error placing order:\", err);\r\n      if (err.response) {\r\n        console.error(\"Error response:\", err.response.data);\r\n        console.error(\"Status code:\", err.response.status);\r\n        message.error(\r\n          `Failed to place order: ${JSON.stringify(err.response.data)}`\r\n        );\r\n      } else {\r\n        message.error(\"Failed to place order. Please try again.\");\r\n      }\r\n    } finally {\r\n      setOrderLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setNewItem({\r\n      ...newItem,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleCurrencyChange = (value) => {\r\n    setNewItem({\r\n      ...newItem,\r\n      currency: value,\r\n    });\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImageFile(file);\r\n\r\n      // Create preview\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImagePreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      setImageFile(null);\r\n      setImagePreview(null);\r\n    }\r\n  };\r\n\r\n  // Add these new handler functions inside the component:\r\n\r\n  const handleEdit = (item) => {\r\n    // Pre-fill the form with the item's data\r\n    setEditingItem({ ...item });\r\n    setIsEditModalVisible(true);\r\n  };\r\n\r\n  const handleEditInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setEditingItem({\r\n      ...editingItem,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleEditCurrencyChange = (value) => {\r\n    setEditingItem({\r\n      ...editingItem,\r\n      currency: value,\r\n    });\r\n  };\r\n\r\n  const handleEditImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      // Store the file\r\n      setEditingItem({\r\n        ...editingItem,\r\n        imageFile: file,\r\n      });\r\n\r\n      // Create preview\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setEditingItem({\r\n          ...editingItem,\r\n          imagePreview: reader.result,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      setEditingItem({\r\n        ...editingItem,\r\n        imageFile: null,\r\n        imagePreview: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUpdateItem = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Create FormData object to handle file upload\r\n      const formData = new FormData();\r\n      formData.append(\"name\", editingItem.name);\r\n      formData.append(\"description\", editingItem.description);\r\n      formData.append(\"price\", editingItem.price);\r\n      formData.append(\"category\", editingItem.category);\r\n      formData.append(\"is_available\", editingItem.is_available);\r\n      formData.append(\"currency\", editingItem.currency);\r\n\r\n      if (editingItem.imageFile) {\r\n        formData.append(\"image\", editingItem.imageFile);\r\n      }\r\n\r\n      // Send the form data to the API\r\n      const response = await axios.put(\r\n        `${API_BASE_URL}${editingItem.id}/`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(\"API response:\", response.data);\r\n\r\n      // Close modal and reset form\r\n      setIsEditModalVisible(false);\r\n      setEditingItem(null);\r\n\r\n      // Refresh the menu items\r\n      fetchMenuItems();\r\n      message.success(\"Menu item updated successfully!\");\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data\r\n        ? JSON.stringify(err.response.data)\r\n        : \"Failed to update menu item\";\r\n      setError(errorMessage);\r\n      console.error(\"Error updating menu item:\", err.response?.data || err);\r\n      message.error(\"Failed to update menu item\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      if (window.confirm(\"Are you sure you want to delete this item?\")) {\r\n        await axios.delete(`${API_BASE_URL}${id}/`);\r\n        // Refresh the menu items\r\n        fetchMenuItems();\r\n        message.success(\"Menu item deleted successfully!\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to delete menu item\");\r\n      console.error(\"Error deleting menu item:\", err);\r\n      message.error(\"Failed to delete menu item\");\r\n    }\r\n  };\r\n\r\n  const handleAddItem = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Create FormData object to handle file upload\r\n      const formData = new FormData();\r\n      formData.append(\"name\", newItem.name);\r\n      formData.append(\"description\", newItem.description);\r\n      formData.append(\"price\", newItem.price);\r\n      formData.append(\"category\", newItem.category);\r\n      formData.append(\"is_available\", newItem.is_available);\r\n      formData.append(\"currency\", newItem.currency); // Add currency field\r\n\r\n      if (imageFile) {\r\n        formData.append(\"image\", imageFile);\r\n      }\r\n\r\n      // Send the form data to the API\r\n      const response = await axios.post(API_BASE_URL, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      console.log(\"API response:\", response.data);\r\n\r\n      // Reset form\r\n      setNewItem({\r\n        name: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        category: \"FOOD\",\r\n        is_available: true,\r\n        currency: \"USD\", // Reset to default currency\r\n      });\r\n      setImageFile(null);\r\n      setImagePreview(null);\r\n      setShowAddForm(false);\r\n\r\n      // Refresh the menu items\r\n      fetchMenuItems();\r\n      message.success(\"Menu item added successfully!\");\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data\r\n        ? JSON.stringify(err.response.data)\r\n        : \"Failed to add menu item\";\r\n      setError(errorMessage);\r\n      console.error(\"Error adding menu item:\", err.response?.data || err);\r\n      message.error(\"Failed to add menu item\");\r\n    }\r\n  };\r\n\r\n  // Helper function to get display name for category\r\n  const getCategoryDisplay = (categoryValue) => {\r\n    const category = categoryOptions.find((opt) => opt.value === categoryValue);\r\n    return category ? category.label : categoryValue;\r\n  };\r\n\r\n  const getCategoryItems = () => {\r\n    if (filterCategory === \"all\") {\r\n      return menuItems;\r\n    }\r\n    return menuItems.filter((item) => item.category === filterCategory);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  // Get the display price for an item in the current currency\r\n  const getDisplayPrice = (item) => {\r\n    const itemCurrency = item.currency || \"USD\"; // Default to USD if not specified\r\n    const convertedPrice = convertPrice(item.price, itemCurrency, currency);\r\n    return formatCurrency(convertedPrice);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8 h-screen max-h-screen overflow-y-auto\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <button\r\n          onClick={() => setShowAddForm(!showAddForm)}\r\n          className=\"bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded transition duration-200\"\r\n        >\r\n          {showAddForm ? \"Cancel\" : \"Add New Item\"}\r\n        </button>\r\n\r\n        {/* Currency Toggle */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <span className={currency === \"USD\" ? \"font-semibold\" : \"\"}>USD</span>\r\n          <Switch\r\n            checked={currency === \"PHP\"}\r\n            onChange={toggleCurrency}\r\n            className=\"bg-gray-300\"\r\n          />\r\n          <span className={currency === \"PHP\" ? \"font-semibold\" : \"\"}>PHP</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Cart Icon with Count */}\r\n      <div className=\"flex justify-end mb-4\">\r\n        <Button\r\n          icon={<ShoppingCartOutlined />}\r\n          onClick={() => setIsCartModalVisible(true)}\r\n          className=\"relative\"\r\n        >\r\n          Cart\r\n          {cart.length > 0 && (\r\n            <span className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full px-2 py-1\">\r\n              {cart.length}\r\n            </span>\r\n          )}\r\n        </Button>\r\n      </div>\r\n\r\n      {error && (\r\n        <div\r\n          className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\"\r\n          role=\"alert\"\r\n        >\r\n          <strong className=\"font-bold\">Error!</strong>\r\n          <span className=\"block sm:inline\"> {error}</span>\r\n          <button\r\n            className=\"absolute top-0 bottom-0 right-0 px-4 py-3\"\r\n            onClick={() => setError(null)}\r\n          >\r\n            <span className=\"text-xl\">&times;</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Cart Modal */}\r\n      <Modal\r\n        title={`Your Cart (${currency})`}\r\n        open={isCartModalVisible}\r\n        onCancel={() => setIsCartModalVisible(false)}\r\n        footer={[\r\n          <Button key=\"cancel\" onClick={() => setIsCartModalVisible(false)}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            key=\"order\"\r\n            type=\"primary\"\r\n            onClick={placeOrder}\r\n            loading={orderLoading}\r\n            disabled={cart.length === 0}\r\n          >\r\n            Place Order\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {cart.length === 0 ? (\r\n          <p className=\"text-center text-gray-500\">Your cart is empty</p>\r\n        ) : (\r\n          <div>\r\n            {/* Cart Items */}\r\n            <div className=\"mb-4\">\r\n              {cart.map((item) => {\r\n                // Convert item price from its original currency to current display currency\r\n                const priceInCurrentCurrency = convertPrice(\r\n                  item.original_price,\r\n                  item.original_currency || \"USD\",\r\n                  currency\r\n                );\r\n\r\n                return (\r\n                  <div\r\n                    key={item.id}\r\n                    className=\"flex justify-between items-center border-b py-2\"\r\n                  >\r\n                    <div className=\"flex-1\">\r\n                      <h3 className=\"font-semibold\">{item.name}</h3>\r\n                      <p className=\"text-gray-600\">\r\n                        {formatCurrency(priceInCurrentCurrency)} each\r\n                        {item.original_currency !== currency && (\r\n                          <span className=\"text-xs ml-1 text-gray-500\">\r\n                            (original:{\" \"}\r\n                            {formatCurrency(\r\n                              item.original_price,\r\n                              item.original_currency\r\n                            )}\r\n                            )\r\n                          </span>\r\n                        )}\r\n                      </p>\r\n                    </div>\r\n\r\n                    {/* Quantity Controls */}\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Button\r\n                        onClick={() =>\r\n                          updateQuantity(item.id, item.quantity - 1)\r\n                        }\r\n                        size=\"small\"\r\n                      >\r\n                        -\r\n                      </Button>\r\n                      <span>{item.quantity}</span>\r\n                      <Button\r\n                        onClick={() =>\r\n                          updateQuantity(item.id, item.quantity + 1)\r\n                        }\r\n                        size=\"small\"\r\n                      >\r\n                        +\r\n                      </Button>\r\n                    </div>\r\n\r\n                    {/* Item Total */}\r\n                    <div className=\"mx-4 text-right font-semibold\">\r\n                      {formatCurrency(priceInCurrentCurrency * item.quantity)}\r\n                    </div>\r\n\r\n                    {/* Remove Item */}\r\n                    <Button\r\n                      onClick={() => removeFromCart(item.id)}\r\n                      type=\"text\"\r\n                      danger\r\n                      size=\"small\"\r\n                    >\r\n                      Remove\r\n                    </Button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            {/* Total */}\r\n            <div className=\"text-right font-bold mb-4\">\r\n              Total: {formatCurrency(calculateTotal())}\r\n            </div>\r\n\r\n            {/* Customer Details Form */}\r\n            <div className=\"space-y-3\">\r\n              <Input\r\n                placeholder=\"Customer ID\"\r\n                name=\"customer_id\"\r\n                value={customerDetails.customer_id}\r\n                onChange={handleCustomerDetailsChange}\r\n                required\r\n              />\r\n              <Input\r\n                placeholder=\"Customer Name\"\r\n                name=\"customer_name\"\r\n                value={customerDetails.customer_name}\r\n                onChange={handleCustomerDetailsChange}\r\n                required\r\n              />\r\n              <Input\r\n                type=\"date\"\r\n                name=\"order_date\"\r\n                value={customerDetails.order_date}\r\n                onChange={handleCustomerDetailsChange}\r\n              />\r\n              <div className=\"flex justify-between items-center\">\r\n                <Select\r\n                  style={{ width: \"48%\" }}\r\n                  value={customerDetails.status}\r\n                  onChange={(value) =>\r\n                    setCustomerDetails((prev) => ({ ...prev, status: value }))\r\n                  }\r\n                >\r\n                  <Select.Option value=\"pending\">Pending</Select.Option>\r\n                  <Select.Option value=\"completed\">Completed</Select.Option>\r\n                </Select>\r\n                <div className=\"text-sm\">\r\n                  Currency: <span className=\"font-bold\">{currency}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n\r\n      {showAddForm && (\r\n        <div className=\"bg-white shadow-md rounded-lg p-6 mb-8\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Add New Menu Item</h2>\r\n          <form onSubmit={handleAddItem}>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                  htmlFor=\"name\"\r\n                >\r\n                  Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  value={newItem.name}\r\n                  onChange={handleInputChange}\r\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                  htmlFor=\"price\"\r\n                >\r\n                  Price\r\n                </label>\r\n                <div className=\"flex space-x-2\">\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    id=\"price\"\r\n                    name=\"price\"\r\n                    value={newItem.price}\r\n                    onChange={handleInputChange}\r\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                    required\r\n                  />\r\n                  <Select\r\n                    style={{ width: \"100px\" }}\r\n                    value={newItem.currency}\r\n                    onChange={handleCurrencyChange}\r\n                  >\r\n                    <Select.Option value=\"USD\">USD</Select.Option>\r\n                    <Select.Option value=\"PHP\">PHP</Select.Option>\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"md:col-span-2\">\r\n                <label\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                  htmlFor=\"description\"\r\n                >\r\n                  Description\r\n                </label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  value={newItem.description}\r\n                  onChange={handleInputChange}\r\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                  rows=\"3\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                  htmlFor=\"category\"\r\n                >\r\n                  Category\r\n                </label>\r\n                <select\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  value={newItem.category}\r\n                  onChange={handleInputChange}\r\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                >\r\n                  {categoryOptions.map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label\r\n                  className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                  htmlFor=\"image\"\r\n                >\r\n                  Image\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"image\"\r\n                  name=\"image\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleImageChange}\r\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                />\r\n                {imagePreview && (\r\n                  <div className=\"mt-2\">\r\n                    <img\r\n                      src={imagePreview}\r\n                      alt=\"Preview\"\r\n                      className=\"w-full h-32 object-cover rounded border\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"is_available\"\r\n                  name=\"is_available\"\r\n                  checked={newItem.is_available}\r\n                  onChange={handleInputChange}\r\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                />\r\n                <label\r\n                  className=\"ml-2 block text-gray-700 text-sm font-bold\"\r\n                  htmlFor=\"is_available\"\r\n                >\r\n                  Is Available\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-6 flex justify-end\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-green-500 hover:bg-green-600 text-white font-semibold py-2 px-4 rounded transition duration-200\"\r\n              >\r\n                Add Item\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"mb-6\">\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={() => setFilterCategory(\"all\")}\r\n            className={`px-4 py-2 rounded-md ${\r\n              filterCategory === \"all\"\r\n                ? \"bg-blue-500 text-white\"\r\n                : \"bg-gray-200 text-gray-700 hover:bg-gray-300\"\r\n            }`}\r\n          >\r\n            All\r\n          </button>\r\n          {categoryOptions.map((option) => (\r\n            <button\r\n              key={option.value}\r\n              onClick={() => setFilterCategory(option.value)}\r\n              className={`px-4 py-2 rounded-md ${\r\n                filterCategory === option.value\r\n                  ? \"bg-blue-500 text-white\"\r\n                  : \"bg-gray-200 text-gray-700 hover:bg-gray-300\"\r\n              }`}\r\n            >\r\n              {option.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {menuItems.length === 0 ? (\r\n        <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6\">\r\n          <div className=\"flex\">\r\n            <div className=\"flex-shrink-0\">\r\n              <svg\r\n                className=\"h-5 w-5 text-yellow-400\"\r\n                viewBox=\"0 0 20 20\"\r\n                fill=\"currentColor\"\r\n              >\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\r\n                  clipRule=\"evenodd\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div className=\"ml-3\">\r\n              <p className=\"text-sm text-yellow-700\">\r\n                No menu items found. Add your first menu item by clicking the\r\n                \"Add New Item\" button.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {getCategoryItems().map((item) => (\r\n            <div\r\n              key={item.id}\r\n              className=\"bg-white rounded-lg shadow-md overflow-hidden\"\r\n            >\r\n              <div className=\"h-48 bg-gray-300 relative\">\r\n                {item.image ? (\r\n                  <img\r\n                    src={item.image}\r\n                    alt={item.name}\r\n                    className=\"w-full h-full object-cover\"\r\n                  />\r\n                ) : (\r\n                  <div className=\"flex items-center justify-center h-full bg-gray-200\">\r\n                    <span className=\"text-gray-500\">No image</span>\r\n                  </div>\r\n                )}\r\n                {!item.is_available && (\r\n                  <div className=\"absolute top-2 right-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded\">\r\n                    Not Available\r\n                  </div>\r\n                )}\r\n                <div className=\"absolute top-2 left-2 bg-blue-500 text-white text-xs font-bold px-2 py-1 rounded\">\r\n                  {getCategoryDisplay(item.category)}\r\n                </div>\r\n                {/* Show original currency if different */}\r\n                {item.currency && item.currency !== currency && (\r\n                  <div className=\"absolute bottom-2 right-2 bg-purple-500 text-white text-xs font-bold px-2 py-1 rounded\">\r\n                    Originally in {item.currency}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"p-4\">\r\n                <div className=\"flex justify-between items-start mb-2\">\r\n                  <h3 className=\"text-xl font-semibold text-gray-800\">\r\n                    {item.name}\r\n                  </h3>\r\n                  <span className=\"font-bold text-green-600\">\r\n                    {getDisplayPrice(item)}\r\n                  </span>\r\n                </div>\r\n                <p className=\"text-gray-600 text-sm mb-4 line-clamp-3\">\r\n                  {item.description}\r\n                </p>\r\n                <div className=\"text-xs text-gray-500 mt-4\">\r\n                  <p>Created: {formatDate(item.created_at)}</p>\r\n                  <p>Updated: {formatDate(item.updated_at)}</p>\r\n                </div>\r\n                <div className=\"mt-4 flex justify-between items-center\">\r\n                  {item.is_available && (\r\n                    <button\r\n                      onClick={() => addToCart(item)}\r\n                      className=\"bg-green-500 hover:bg-green-600 text-white text-sm py-1 px-3 rounded transition duration-200 flex items-center\"\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-4 w-4 mr-1\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        fill=\"currentColor\"\r\n                      >\r\n                        <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\r\n                      </svg>\r\n                      Add to Cart\r\n                    </button>\r\n                  )}\r\n                  <div className=\"space-y-2\">\r\n                    <div\r\n                      key={item.id}\r\n                      className=\"flex justify-between items-center py-2 px-4 bg-white border rounded shadow-sm\"\r\n                    >\r\n\r\n                      {/* Action buttons: Edit and Delete */}\r\n                      <div className=\"flex space-x-2\">\r\n                        <button\r\n                          onClick={() => handleDelete(item.id)}\r\n                          className=\"bg-red-500 hover:bg-red-600 text-white text-sm py-1 px-3 rounded transition duration-200\"\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuList;","import React from \"react\";\r\nimport MenuList from \"../components/MenuList\"; // ✅ Import the updated MenuList\r\n\r\nconst MenuPage = () => {\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"flex flex-col flex-1\">\r\n        {/* Menu Management Section */}\r\n        <div className=\"p-6 bg-gray-100\">\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <h1 className=\"text-3xl font-bold\">Menu Management</h1>\r\n          </div>\r\n\r\n          {/* ✅ Use the Updated MenuList Component */}\r\n          <MenuList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuPage;\r\n"],"names":["MenuList","menuItems","setMenuItems","useState","loading","setLoading","error","setError","filterCategory","setFilterCategory","showAddForm","setShowAddForm","orderData","setOrderData","orderLoading","setOrderLoading","editingItem","setEditingItem","isEditModalVisible","setIsEditModalVisible","currency","setCurrency","exchangeRate","setExchangeRate","cart","setCart","isCartModalVisible","setIsCartModalVisible","customerDetails","setCustomerDetails","newItem","setNewItem","imageFile","setImageFile","imagePreview","setImagePreview","categoryOptions","API_BASE_URL","ORDERS_API_URL","useEffect","fetchMenuItems","fetchOrders","fetchExchangeRate","err","response","axios","convertPrice","price","fromCurrency","toCurrency","formatCurrency","amount","currencyCode","config","toggleCurrency","prev","addToCart","item","existingItem","cartItem","itemWithCurrency","updateQuantity","itemId","newQuantity","removeFromCart","calculateTotal","total","priceInCurrentCurrency","handleCustomerDetailsChange","e","name","value","validateOrderData","message","placeOrder","handleInputChange","type","checked","handleCurrencyChange","handleImageChange","file","reader","handleDelete","id","handleAddItem","formData","errorMessage","_a","_b","getCategoryDisplay","categoryValue","category","opt","getCategoryItems","formatDate","dateString","getDisplayPrice","itemCurrency","convertedPrice","jsx","jsxs","Switch","Button","ShoppingCartOutlined","Modal","Input","Select","option","MenuPage"],"mappings":"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"}