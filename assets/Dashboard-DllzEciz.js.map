{"version":3,"file":"Dashboard-DllzEciz.js","sources":["../../src/components/Footer.jsx","../../src/pages/Dashboard.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  return (\r\n    <footer className=\"bg-gray-100 text-gray-700 text-sm text-center py-4 border-t\">\r\n      <div className=\"w-full flex justify-center\">\r\n        <div className=\"w-full md:w-2/3 px-4 space-y-1\">\r\n          <p className=\"font-semibold text-base\">Tomlin Eatery</p>\r\n          <p>Erlinda G. Miguel - Prop</p>\r\n          <p>Non-VAT Reg Tin: 275-775-517-00000</p>\r\n          <p>Purok 1, Sumacab Este 3100</p>\r\n          <p>City of Cabanatuan, Nueva Ecija, Phils.</p>\r\n          <hr className=\"my-2 border-gray-300\" />\r\n          <p className=\"text-xs text-gray-500\">\r\n            Â© {currentYear} Dominion AI. All Rights Reserved.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FaDollarSign,\r\n  FaChartLine,\r\n  FaUsers,\r\n  FaBox,\r\n  FaSync,\r\n} from \"react-icons/fa\";\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\";\r\nimport axios from \"axios\";\r\nimport Footer from \"../components/Footer\";\r\n\r\n// Define API base URL\r\nconst API_BASE_URL = \"https://tomlin-backend.onrender.com\";\r\n\r\nconst Dashboard = () => {\r\n  const [dashboardData, setDashboardData] = useState({\r\n    totalRevenue: 0,\r\n    totalOrders: 0,\r\n    totalCustomers: 0,\r\n    totalInventory: 0,\r\n    salesData: [],\r\n    revenueData: [],\r\n  });\r\n\r\n  const [dateRange, setDateRange] = useState({\r\n    startDate: new Date(new Date().setDate(new Date().getDate() - 30))\r\n      .toISOString()\r\n      .split(\"T\")[0], // Default to last 30 days\r\n    endDate: new Date().toISOString().split(\"T\")[0],\r\n  });\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [refreshInterval, setRefreshInterval] = useState(60000); // 1 minute default\r\n  const [isLoading, setIsLoading] = useState({\r\n    orders: false,\r\n  });\r\n  const [totalRevenue, setTotalRevenue] = useState(0);\r\n\r\n  // Function to show notifications\r\n  const showNotification = (message, type) => {\r\n    console.log(`${type}: ${message}`);\r\n    // Implement proper notification if you have a notification system\r\n  };\r\n\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const queryParams = new URLSearchParams({\r\n        start_date: dateRange.startDate,\r\n        end_date: dateRange.endDate,\r\n      }).toString();\r\n\r\n      // Using axios for consistent API calls\r\n      const token = localStorage.getItem(\"token\");\r\n      const headers = token\r\n        ? {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        : {\r\n            \"Content-Type\": \"application/json\",\r\n          };\r\n\r\n      // Fetch orders data\r\n      const ordersResponse = await axios.get(\r\n        `${API_BASE_URL}/api/orders/?${queryParams}`,\r\n        { headers }\r\n      );\r\n\r\n      // Fetch inventory data\r\n      const inventoryResponse = await axios.get(\r\n        `${API_BASE_URL}/api/inventory/`,\r\n        { headers }\r\n      );\r\n\r\n      // Fetch revenue data (assuming endpoint exists)\r\n      let revenueData = [];\r\n      try {\r\n        const revenueResponse = await axios.get(\r\n          `${API_BASE_URL}/api/orders/?${queryParams}`,\r\n          { headers }\r\n        );\r\n        revenueData = revenueResponse.data.revenue_data || [];\r\n      } catch (err) {\r\n        console.warn(\"Could not fetch revenue data:\", err);\r\n      }\r\n\r\n      // Calculate sales data from orders if not provided directly\r\n      const salesData =\r\n        ordersResponse.data.sales_data ||\r\n        (Array.isArray(ordersResponse.data)\r\n          ? ordersResponse.data\r\n              .map((order) => ({\r\n                date: new Date(order.created_at).toLocaleDateString(),\r\n                count: 1,\r\n              }))\r\n              .reduce((acc, curr) => {\r\n                const existingDate = acc.find(\r\n                  (item) => item.date === curr.date\r\n                );\r\n                if (existingDate) {\r\n                  existingDate.count += curr.count;\r\n                } else {\r\n                  acc.push(curr);\r\n                }\r\n                return acc;\r\n              }, [])\r\n          : []);\r\n\r\n      // Calculate total revenue if not provided directly\r\n      const totalRevenue =\r\n        ordersResponse.data.total_revenue ||\r\n        (Array.isArray(ordersResponse.data)\r\n          ? ordersResponse.data.reduce(\r\n              (sum, order) => sum + (parseFloat(order.amount) || 0),\r\n              0\r\n            )\r\n          : 0);\r\n\r\n      // Get unique customers from orders data (by customer_name)\r\n      const uniqueCustomers = Array.isArray(ordersResponse.data)\r\n        ? [\r\n            ...new Set(\r\n              ordersResponse.data\r\n                .filter((order) => order.customer_name)\r\n                .map((order) => order.customer_name)\r\n            ),\r\n          ]\r\n        : [];\r\n\r\n      setDashboardData({\r\n        totalRevenue: totalRevenue,\r\n        totalOrders:\r\n          ordersResponse.data.total_orders ||\r\n          (Array.isArray(ordersResponse.data) ? ordersResponse.data.length : 0),\r\n        totalCustomers: uniqueCustomers.length,\r\n        totalInventory:\r\n          inventoryResponse.data.total_inventory ||\r\n          (Array.isArray(inventoryResponse.data)\r\n            ? inventoryResponse.data.length\r\n            : 0),\r\n        salesData: salesData,\r\n        revenueData: revenueData,\r\n      });\r\n\r\n      // Update totalRevenue state\r\n      setTotalRevenue(totalRevenue);\r\n\r\n      setError(null);\r\n    } catch (err) {\r\n      console.error(\"Error fetching dashboard data:\", err);\r\n      setError(\r\n        \"Failed to load data. Please check your connection and try again.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Initial data load and refresh setup\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n\r\n    const intervalId = setInterval(fetchDashboardData, refreshInterval);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [dateRange, refreshInterval]);\r\n\r\n  // Handle date range change\r\n  const handleDateChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setDateRange((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Format currency\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat(\"en-US\", {\r\n      style: \"currency\",\r\n      currency: \"USD\",\r\n    }).format(amount);\r\n  };\r\n\r\n  // Format date function\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"N/A\";\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  // Chart Data\r\n  const salesChartData = {\r\n    labels: dashboardData.salesData.map((item) => item.date),\r\n    datasets: [\r\n      {\r\n        label: \"Orders\",\r\n        data: dashboardData.salesData.map((item) => item.count),\r\n        backgroundColor: \"#3b82f6\",\r\n        borderRadius: 6,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const revenueChartData = {\r\n    labels: dashboardData.revenueData.map((item) => item.date),\r\n    datasets: [\r\n      {\r\n        label: \"Revenue\",\r\n        data: dashboardData.revenueData.map((item) => item.amount),\r\n        borderColor: \"#10b981\",\r\n        backgroundColor: \"rgba(16, 185, 129, 0.1)\",\r\n        tension: 0.4,\r\n        fill: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart Options\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      tooltip: {\r\n        intersect: false,\r\n        mode: \"index\",\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen bg-gray-50\">\r\n      {/* Header Section */}\r\n      <header className=\"bg-white shadow-sm border-b border-gray-200 px-6 py-4\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <h1 className=\"text-2xl font-bold text-gray-800\">Dashboard</h1>\r\n\r\n          <div className=\"flex space-x-4 items-center\">\r\n            <div className=\"flex space-x-2\">\r\n              <input\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                value={dateRange.startDate}\r\n                onChange={handleDateChange}\r\n                className=\"px-3 py-2 border border-gray-300 rounded-md text-sm\"\r\n              />\r\n              <span className=\"self-center\">to</span>\r\n              <input\r\n                type=\"date\"\r\n                name=\"endDate\"\r\n                value={dateRange.endDate}\r\n                onChange={handleDateChange}\r\n                className=\"px-3 py-2 border border-gray-300 rounded-md text-sm\"\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              onClick={fetchDashboardData}\r\n              className=\"flex items-center px-4 py-2 bg-indigo-600 text-white rounded-md text-sm hover:bg-indigo-700 transition-colors\"\r\n            >\r\n              <FaSync className=\"mr-2\" size={14} />\r\n              Refresh\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"p-6 flex-grow\">\r\n        {loading && (\r\n          <div className=\"flex justify-center my-8\">\r\n            <p className=\"text-gray-500\">Loading dashboard data...</p>\r\n          </div>\r\n        )}\r\n        {error && (\r\n          <div className=\"bg-red-50 text-red-600 p-4 rounded-md my-4\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {!loading && !error && (\r\n          <>\r\n            {/* Stats Cards */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n              {/* Revenue Card */}\r\n              <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100 hover:shadow-md transition-shadow\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <div className=\"p-3 bg-green-100 rounded-md\">\r\n                    <FaDollarSign className=\"text-green-600 text-xl\" />\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-gray-500\">\r\n                      Total Revenue\r\n                    </p>\r\n                    <h2 className=\"text-2xl font-bold text-gray-800\">\r\n                      {formatCurrency(dashboardData.totalRevenue)}\r\n                    </h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Orders Card */}\r\n              <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100 hover:shadow-md transition-shadow\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <div className=\"p-3 bg-blue-100 rounded-md\">\r\n                    <FaChartLine className=\"text-blue-600 text-xl\" />\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-gray-500\">\r\n                      Total Orders\r\n                    </p>\r\n                    <h2 className=\"text-2xl font-bold text-gray-800\">\r\n                      {dashboardData.totalOrders.toLocaleString()}\r\n                    </h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Customers Card */}\r\n              <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100 hover:shadow-md transition-shadow\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <div className=\"p-3 bg-purple-100 rounded-md\">\r\n                    <FaUsers className=\"text-purple-600 text-xl\" />\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-gray-500\">\r\n                      Total Customers\r\n                    </p>\r\n                    <h2 className=\"text-2xl font-bold text-gray-800\">\r\n                      {dashboardData.totalCustomers.toLocaleString()}\r\n                    </h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Inventory Card */}\r\n              <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100 hover:shadow-md transition-shadow\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <div className=\"p-3 bg-amber-100 rounded-md\">\r\n                    <FaBox className=\"text-amber-600 text-xl\" />\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-gray-500\">\r\n                      Total Inventory\r\n                    </p>\r\n                    <h2 className=\"text-2xl font-bold text-gray-800\">\r\n                      {dashboardData.totalInventory.toLocaleString()}\r\n                    </h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Charts Section */}\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\r\n              {/* Sales Chart */}\r\n              <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\r\n                <h2 className=\"text-lg font-semibold mb-4 text-gray-800\">\r\n                  Sales Trend\r\n                </h2>\r\n                <div className=\"h-64\">\r\n                  <Bar data={salesChartData} options={chartOptions} />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Revenue Chart */}\r\n              <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\r\n                <h2 className=\"text-lg font-semibold mb-4 text-gray-800\">\r\n                  Revenue Growth\r\n                </h2>\r\n                <div className=\"h-64\">\r\n                  <Line data={revenueChartData} options={chartOptions} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n        <Footer />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["Footer","currentYear","jsx","jsxs","API_BASE_URL","Dashboard","dashboardData","setDashboardData","useState","dateRange","setDateRange","loading","setLoading","error","setError","refreshInterval","setRefreshInterval","isLoading","setIsLoading","totalRevenue","setTotalRevenue","fetchDashboardData","queryParams","token","headers","ordersResponse","axios","inventoryResponse","revenueData","err","salesData","order","acc","curr","existingDate","item","sum","uniqueCustomers","useEffect","intervalId","handleDateChange","e","name","value","prev","formatCurrency","amount","salesChartData","revenueChartData","chartOptions","FaSync","Fragment","FaDollarSign","FaChartLine","FaUsers","FaBox","Bar","Line"],"mappings":"mLAEA,MAAMA,EAAS,IAAM,CACnB,MAAMC,EAAc,IAAI,KAAK,EAAE,YAAY,EAGzC,OAAAC,EAAAA,IAAC,SAAO,CAAA,UAAU,8DAChB,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,6BACb,SAAAC,EAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAACD,EAAA,IAAA,IAAA,CAAE,UAAU,0BAA0B,SAAa,gBAAA,EACpDA,EAAAA,IAAC,KAAE,SAAwB,0BAAA,CAAA,EAC3BA,EAAAA,IAAC,KAAE,SAAkC,oCAAA,CAAA,EACrCA,EAAAA,IAAC,KAAE,SAA0B,4BAAA,CAAA,EAC7BA,EAAAA,IAAC,KAAE,SAAuC,yCAAA,CAAA,EAC1CA,EAAAA,IAAC,KAAG,CAAA,UAAU,sBAAuB,CAAA,EACrCC,EAAAA,KAAC,IAAE,CAAA,UAAU,wBAAwB,SAAA,CAAA,KAChCF,EAAY,oCAAA,CACjB,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAEJ,ECRMG,EAAe,sCAEfC,EAAY,IAAM,CACtB,KAAM,CAACC,EAAeC,CAAgB,EAAIC,WAAS,CACjD,aAAc,EACd,YAAa,EACb,eAAgB,EAChB,eAAgB,EAChB,UAAW,CAAC,EACZ,YAAa,CAAA,CAAC,CACf,EAEK,CAACC,EAAWC,CAAY,EAAIF,WAAS,CACzC,UAAW,IAAI,KAAK,IAAI,OAAO,YAAY,KAAK,EAAE,QAAY,EAAA,EAAE,CAAC,EAC9D,cACA,MAAM,GAAG,EAAE,CAAC,EACf,YAAa,KAAK,EAAE,cAAc,MAAM,GAAG,EAAE,CAAC,CAAA,CAC/C,EAEK,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAI,EACrC,CAACK,EAAOC,CAAQ,EAAIN,EAAAA,SAAS,IAAI,EACjC,CAACO,EAAiBC,CAAkB,EAAIR,EAAAA,SAAS,GAAK,EACtD,CAACS,EAAWC,CAAY,EAAIV,WAAS,CACzC,OAAQ,EAAA,CACT,EACK,CAACW,EAAcC,CAAe,EAAIZ,EAAAA,SAAS,CAAC,EAQ5Ca,EAAqB,SAAY,CACjC,GAAA,CACFT,EAAW,EAAI,EACT,MAAAU,EAAc,IAAI,gBAAgB,CACtC,WAAYb,EAAU,UACtB,SAAUA,EAAU,OACrB,CAAA,EAAE,SAAS,EAGNc,EAAQ,aAAa,QAAQ,OAAO,EACpCC,EAAUD,EACZ,CACE,cAAe,UAAUA,CAAK,GAC9B,eAAgB,kBAAA,EAElB,CACE,eAAgB,kBAClB,EAGEE,EAAiB,MAAMC,EAAM,IACjC,GAAGtB,CAAY,gBAAgBkB,CAAW,GAC1C,CAAE,QAAAE,CAAQ,CACZ,EAGMG,EAAoB,MAAMD,EAAM,IACpC,GAAGtB,CAAY,kBACf,CAAE,QAAAoB,CAAQ,CACZ,EAGA,IAAII,EAAc,CAAC,EACf,GAAA,CAKYA,GAJU,MAAMF,EAAM,IAClC,GAAGtB,CAAY,gBAAgBkB,CAAW,GAC1C,CAAE,QAAAE,CAAQ,CACZ,GAC8B,KAAK,cAAgB,CAAC,QAC7CK,EAAK,CACJ,QAAA,KAAK,gCAAiCA,CAAG,CAAA,CAInD,MAAMC,EACJL,EAAe,KAAK,aACnB,MAAM,QAAQA,EAAe,IAAI,EAC9BA,EAAe,KACZ,IAAKM,IAAW,CACf,KAAM,IAAI,KAAKA,EAAM,UAAU,EAAE,mBAAmB,EACpD,MAAO,CACP,EAAA,EACD,OAAO,CAACC,EAAKC,IAAS,CACrB,MAAMC,EAAeF,EAAI,KACtBG,GAASA,EAAK,OAASF,EAAK,IAC/B,EACA,OAAIC,EACFA,EAAa,OAASD,EAAK,MAE3BD,EAAI,KAAKC,CAAI,EAERD,CAAA,EACN,CAAA,CAAE,EACP,IAGAb,EACJM,EAAe,KAAK,gBACnB,MAAM,QAAQA,EAAe,IAAI,EAC9BA,EAAe,KAAK,OAClB,CAACW,EAAKL,IAAUK,GAAO,WAAWL,EAAM,MAAM,GAAK,GACnD,CAEF,EAAA,GAGAM,EAAkB,MAAM,QAAQZ,EAAe,IAAI,EACrD,CACE,GAAG,IAAI,IACLA,EAAe,KACZ,OAAQM,GAAUA,EAAM,aAAa,EACrC,IAAKA,GAAUA,EAAM,aAAa,CAAA,CACvC,EAEF,CAAC,EAEYxB,EAAA,CACf,aAAcY,EACd,YACEM,EAAe,KAAK,eACnB,MAAM,QAAQA,EAAe,IAAI,EAAIA,EAAe,KAAK,OAAS,GACrE,eAAgBY,EAAgB,OAChC,eACEV,EAAkB,KAAK,kBACtB,MAAM,QAAQA,EAAkB,IAAI,EACjCA,EAAkB,KAAK,OACvB,GACN,UAAAG,EACA,YAAAF,CAAA,CACD,EAGDR,EAAgBD,CAAY,EAE5BL,EAAS,IAAI,QACNe,EAAK,CACJ,QAAA,MAAM,iCAAkCA,CAAG,EACnDf,EACE,kEACF,CAAA,QACA,CACAF,EAAW,EAAK,CAAA,CAEpB,EAGA0B,EAAAA,UAAU,IAAM,CACKjB,EAAA,EAEb,MAAAkB,EAAa,YAAYlB,EAAoBN,CAAe,EAE3D,MAAA,IAAM,cAAcwB,CAAU,CAAA,EACpC,CAAC9B,EAAWM,CAAe,CAAC,EAGzB,MAAAyB,EAAoBC,GAAM,CAC9B,KAAM,CAAE,KAAAC,EAAM,MAAAC,CAAM,EAAIF,EAAE,OAC1B/B,EAAckC,IAAU,CACtB,GAAGA,EACH,CAACF,CAAI,EAAGC,CAAA,EACR,CACJ,EAGME,EAAkBC,GACf,IAAI,KAAK,aAAa,QAAS,CACpC,MAAO,WACP,SAAU,KAAA,CACX,EAAE,OAAOA,CAAM,EAUZC,EAAiB,CACrB,OAAQzC,EAAc,UAAU,IAAK6B,GAASA,EAAK,IAAI,EACvD,SAAU,CACR,CACE,MAAO,SACP,KAAM7B,EAAc,UAAU,IAAK6B,GAASA,EAAK,KAAK,EACtD,gBAAiB,UACjB,aAAc,CAAA,CAChB,CAEJ,EAEMa,EAAmB,CACvB,OAAQ1C,EAAc,YAAY,IAAK6B,GAASA,EAAK,IAAI,EACzD,SAAU,CACR,CACE,MAAO,UACP,KAAM7B,EAAc,YAAY,IAAK6B,GAASA,EAAK,MAAM,EACzD,YAAa,UACb,gBAAiB,0BACjB,QAAS,GACT,KAAM,EAAA,CACR,CAEJ,EAGMc,EAAe,CACnB,WAAY,GACZ,oBAAqB,GACrB,QAAS,CACP,OAAQ,CACN,SAAU,KACZ,EACA,QAAS,CACP,UAAW,GACX,KAAM,OAAA,CAEV,EACA,OAAQ,CACN,EAAG,CACD,YAAa,EAAA,CACf,CAEJ,EAGE,OAAA9C,EAAA,KAAC,MAAI,CAAA,UAAU,wCAEb,SAAA,CAAAD,EAAAA,IAAC,UAAO,UAAU,wDAChB,SAACC,EAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,mCAAmC,SAAS,YAAA,EAE1DC,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAD,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,YACL,MAAOO,EAAU,UACjB,SAAU+B,EACV,UAAU,qDAAA,CACZ,EACCtC,EAAA,IAAA,OAAA,CAAK,UAAU,cAAc,SAAE,KAAA,EAChCA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,KAAK,UACL,MAAOO,EAAU,QACjB,SAAU+B,EACV,UAAU,qDAAA,CAAA,CACZ,EACF,EAEArC,EAAA,KAAC,SAAA,CACC,QAASkB,EACT,UAAU,gHAEV,SAAA,CAAAnB,EAAA,IAACgD,EAAO,CAAA,UAAU,OAAO,KAAM,GAAI,EAAE,SAAA,CAAA,CAAA,CAEvC,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAGA/C,EAAAA,KAAC,OAAK,CAAA,UAAU,gBACb,SAAA,CACCQ,GAAAT,EAAA,IAAC,OAAI,UAAU,2BACb,eAAC,IAAE,CAAA,UAAU,gBAAgB,SAAA,2BAAA,CAAyB,CACxD,CAAA,EAEDW,GACCX,EAAA,IAAC,MAAI,CAAA,UAAU,6CACZ,SACHW,EAAA,EAGD,CAACF,GAAW,CAACE,GAGVV,EAAA,KAAAgD,EAAA,SAAA,CAAA,SAAA,CAAChD,EAAAA,KAAA,MAAA,CAAI,UAAU,4DAEb,SAAA,CAAAD,EAAAA,IAAC,OAAI,UAAU,6FACb,SAACC,EAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAD,EAAAA,IAAC,OAAI,UAAU,8BACb,eAACkD,EAAa,CAAA,UAAU,yBAAyB,CACnD,CAAA,SACC,MACC,CAAA,SAAA,CAAClD,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAEjD,gBAAA,QACC,KAAG,CAAA,UAAU,mCACX,SAAe2C,EAAAvC,EAAc,YAAY,CAC5C,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QAGC,MAAI,CAAA,UAAU,6FACb,SAACH,EAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAD,EAAAA,IAAC,OAAI,UAAU,6BACb,eAACmD,EAAY,CAAA,UAAU,wBAAwB,CACjD,CAAA,SACC,MACC,CAAA,SAAA,CAACnD,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAEjD,eAAA,QACC,KAAG,CAAA,UAAU,mCACX,SAAcI,EAAA,YAAY,gBAC7B,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QAGC,MAAI,CAAA,UAAU,6FACb,SAACH,EAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAD,EAAAA,IAAC,OAAI,UAAU,+BACb,eAACoD,EAAQ,CAAA,UAAU,0BAA0B,CAC/C,CAAA,SACC,MACC,CAAA,SAAA,CAACpD,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAEjD,kBAAA,QACC,KAAG,CAAA,UAAU,mCACX,SAAcI,EAAA,eAAe,gBAChC,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QAGC,MAAI,CAAA,UAAU,6FACb,SAACH,EAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAD,EAAAA,IAAC,OAAI,UAAU,8BACb,eAACqD,EAAM,CAAA,UAAU,yBAAyB,CAC5C,CAAA,SACC,MACC,CAAA,SAAA,CAACrD,EAAA,IAAA,IAAA,CAAE,UAAU,oCAAoC,SAEjD,kBAAA,QACC,KAAG,CAAA,UAAU,mCACX,SAAcI,EAAA,eAAe,gBAChC,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGAH,EAAAA,KAAC,MAAI,CAAA,UAAU,6CAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,2DACb,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAEzD,cAAA,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAAA,IAACsD,GAAI,KAAMT,EAAgB,QAASE,CAAc,CAAA,CACpD,CAAA,CAAA,EACF,EAGA9C,EAAAA,KAAC,MAAI,CAAA,UAAU,2DACb,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAEzD,iBAAA,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAAA,IAACuD,GAAK,KAAMT,EAAkB,QAASC,CAAc,CAAA,CACvD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,QAEDjD,EAAO,CAAA,CAAA,CAAA,CACV,CAAA,CAAA,EACF,CAEJ"}