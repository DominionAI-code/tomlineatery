{"version":3,"file":"chart-vendor-CjLmMr0g.js","sources":["../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/chart.js/auto/auto.js"],"sourcesContent":["/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.8\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","type","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","toDimension","callback","fn","args","thisArg","each","loopable","reverse","i","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","clone","source","target","klen","k","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","v","o","_splitKey","parts","tmp","part","_getKeyResolver","obj","resolveObjectKey","_capitalize","str","defined","isFunction","setsEqual","a","b","item","_isClickEvent","e","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","x","y","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNonPrimitive","n","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","min","max","_int16Range","_isBetween","_lookup","table","cmp","index","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","iScale","vScale","_parsed","spanGaps","axis","minDefined","maxDefined","distanceToDefinedLo","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","changed","atEdge","t","elasticIn","elasticOut","effects","isPatternOrGradient","color","Color","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","remain","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","data","gc","longest","string","textWidth","_longestText","arrayOfThings","cache","j","jlen","thing","nestedThing","gcLen","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","w","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","setRenderOpts","opts","decorateText","line","metrics","top","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","h","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","ret","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","parsed","EPSILON","getPoint","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","p1","p2","_steppedInterpolation","_bezierInterpolation","cp1","cp2","c","d","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","l","st","dir","styleChanged","replacer","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","animator","transparent","interpolators","from","to","factor","c0","c1","Animation","cfg","currentValue","elapsed","duration","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","scale","allowedOverflow","defaultClip","toClip","r","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","names","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","__publicField","getAllScaleValues","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","ratio","computeFlexCategoryTraits","pixels","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","edge","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","bars","reset","horizontal","vpixels","ipixels","dataIndex","currentParsed","iScaleValue","skipNull","val","barThickness","baseValue","minBarLength","floating","length","head","startPixel","endPixel","halfGrid","maxBarThickness","center","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","getter","chartArea","arcs","spacing","maxSize","chartWeight","maxRadius","outerRadius","innerRadius","radiusLength","animationOpts","centerX","centerY","animateScale","arc","metaData","total","ringWeightOffset","pointStyle","label","legendItem","legend","LineController","_dataset","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","lastPoint","PolarAreaController","minSize","datasetStartAngle","defaultAngle","PieController","RadarController","pointPosition","ScatterController","showLine","controllers","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","position","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","getNearestCartesianItems","distanceMetric","minDistance","inRange","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","same","other","setBoxDims","placeBoxes","userPadding","weight","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","title","tz","gz","bz","axisID","fontSize","TypedRegistry","override","proto","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","clip","useClip","visible","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawBorder","borderWidth","borderJoinStyle","inner","ArcElement","chartX","chartY","rAdjust","_circumference","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","borderColor","outer","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","xAxis","threshold","_segments","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_loop","_shouldApplyFill","_resolveTarget","propagate","fill","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","yBoxTop","xBoxLeft","borderRadius","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","ci","usePointStyle","useBorderRadius","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","map","plugin_subtitle","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","significand","lastTick","LogarithmicScale","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","pointLabelOpts","additionalAngle","plFont","hLimits","vLimits","updateLimits","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","centerPointLabels","drawPointLabelBox","backdropColor","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","angleLines","INTERVALS","UNITS","sorter","parse","input","adapter","parser","round","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","interpolate","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","registerables"],"mappings":"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","x_google_ignoreList":[0,1,2]}